{
  "name": "aws-nestjs-starter",
  "version": "0.0.1",
  "description": "A starter project that makes creating a deployable AWS Serverless project extremely easy",
  "author": "hardyscc",
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"{src,test}/**/*.ts\"",
    "start": "rm -rf .tsbuildinfo && nest build && cross-env IS_DDB_LOCAL=false nest start",
    "start:watch": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:online": "cross-env IS_DDB_LOCAL=false nest start",
    "deploy": "ts-node -r tsconfig-paths/register genres.ts -- \"src/**/*.schema.ts\" \"resource/dynamodb.yml\" && rimraf .tsbuildinfo && cross-env IS_DDB_LOCAL=false sls deploy --verbose",
    "package": "sls package",
    "lint": "eslint \"{src,test}/**/*.ts\" --max-warnings 0",
    "test": "jest --verbose",
    "test:watch": "jest --verbose --watch",
    "test:cov": "jest --verbose --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "ddb:install": "sls dynamodb install",
    "ddb:start": "sls dynamodb start",
    "sls:offline": "cross-env NO_COLOR= cross-env IS_DDB_LOCAL=true sls offline",
    "sls:online": "cross-env NO_COLOR= sls offline",
    "genres": "ts-node genres.ts -- \"src/**/*.schema.ts\" \"resource/dynamodb.yml\""
  },
  "dependencies": {
    "@apollo/server": "4.12.2",
    "@graphql-tools/merge": "9.0.24",
    "@nestjs/apollo": "13.1.0",
    "@nestjs/common": "11.1.3",
    "@nestjs/config": "4.0.2",
    "@nestjs/core": "11.1.3",
    "@nestjs/graphql": "^13.1.0",
    "@nestjs/platform-express": "11.1.3",
    "@vendia/serverless-express": "4.12.6",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.2",
    "dynamoose": "4.0.4",
    "express": "5.1.0",
    "graphql": "16.11.0",
    "nestjs-dynamoose": "0.6.0",
    "reflect-metadata": "0.2.2",
    "rimraf": "6.0.1",
    "rxjs": "7.8.2",
    "serverless-dotenv-plugin": "^6.0.0",
    "uuid": "11.1.0"
  },
  "devDependencies": {
    "@apollo/gateway": "^2.11.2",
    "@apollo/subgraph": "^2.11.2",
    "@as-integrations/fastify": "^2.1.1",
    "@commitlint/cli": "19.8.1",
    "@commitlint/config-conventional": "19.8.1",
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.7.15",
    "@nestjs/cli": "11.0.7",
    "@nestjs/microservices": "^11.1.3",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/schematics": "11.0.5",
    "@nestjs/testing": "11.1.3",
    "@nestjs/websockets": "^11.1.3",
    "@shelf/jest-dynamodb": "3.5.0",
    "@trivago/prettier-plugin-sort-imports": "5.2.2",
    "@types/aws-lambda": "8.10.150",
    "@types/express": "5.0.3",
    "@types/jest": "29.5.14",
    "@types/js-yaml": "4.0.9",
    "@types/node": "22.16.2",
    "@types/serverless": "3.12.27",
    "@types/supertest": "6.0.3",
    "@types/uuid": "10.0.0",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.8",
    "cross-env": "7.0.3",
    "eslint": "9.30.1",
    "eslint-config-prettier": "10.1.5",
    "eslint-plugin-prettier": "5.5.1",
    "glob-promise": "6.0.7",
    "globals": "16.3.0",
    "husky": "9.1.7",
    "ioredis": "^5.6.1",
    "jest": "29.7.0",
    "js-yaml": "4.1.0",
    "kafkajs": "^2.2.4",
    "lint-staged": "15.5.2",
    "mqtt": "^5.13.2",
    "nats": "^2.29.3",
    "prettier": "3.6.2",
    "serverless": "4.17.1",
    "serverless-dynamodb-local": "0.2.40",
    "serverless-offline": "14.4.0",
    "source-map-support": "0.5.21",
    "supertest": "7.1.3",
    "ts-jest": "29.4.0",
    "ts-loader": "9.5.2",
    "ts-morph": "^25.0.1",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "5.8.3",
    "typescript-eslint": "8.36.0"
  },
  "jest": {
    "preset": "@shelf/jest-dynamodb",
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "testTimeout": 45000
  },
  "lint-staged": {
    "*.ts": [
      "prettier --write"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}